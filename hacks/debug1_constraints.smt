;; universe for Epoch:
;;   Epoch!val!3 Epoch!val!6 Epoch!val!4 Epoch!val!2 Epoch!val!5 Epoch!val!1 Epoch!val!0 
;; -----------
;; definitions for universe elements:
(declare-fun Epoch!val!3 () Epoch)
(declare-fun Epoch!val!6 () Epoch)
(declare-fun Epoch!val!4 () Epoch)
(declare-fun Epoch!val!2 () Epoch)
(declare-fun Epoch!val!5 () Epoch)
(declare-fun Epoch!val!1 () Epoch)
(declare-fun Epoch!val!0 () Epoch)
;; cardinality constraint:
(forall ((x Epoch))
        (or (= x Epoch!val!3)
            (= x Epoch!val!6)
            (= x Epoch!val!4)
            (= x Epoch!val!2)
            (= x Epoch!val!5)
            (= x Epoch!val!1)
            (= x Epoch!val!0)))
;; -----------
;; universe for Node:
;;   Node!val!0 Node!val!1 Node!val!2 
;; -----------
;; definitions for universe elements:
(declare-fun Node!val!0 () Node)
(declare-fun Node!val!1 () Node)
(declare-fun Node!val!2 () Node)
;; cardinality constraint:
(forall ((x Node)) (or (= x Node!val!0) (= x Node!val!1) (= x Node!val!2)))
;; -----------
(define-fun zero () Epoch
  Epoch!val!5)
(define-fun one () Epoch
  Epoch!val!6)
(define-fun first () Node
  Node!val!2)
(define-fun post.held ((x!0 Node)) Bool
  false)
(define-fun post.transfer ((x!0 Epoch) (x!1 Node)) Bool
  (and (= x!0 Epoch!val!0)
       (not (= x!0 Epoch!val!6))
       (not (= x!0 Epoch!val!1))
       (not (= x!0 Epoch!val!4))
       (not (= x!0 Epoch!val!3))
       (not (= x!0 Epoch!val!5))))
(define-fun pre.ep ((x!0 Node)) Epoch
  (let ((a!1 (ite (and (not (= x!0 Node!val!1)) (not (= x!0 Node!val!2)))
                  Epoch!val!3
                  (ite (= x!0 Node!val!2) Epoch!val!1 Epoch!val!5))))
    (ite (and (= x!0 Node!val!1) (not (= x!0 Node!val!2))) Epoch!val!4 a!1)))
(define-fun pre.locked ((x!0 Epoch) (x!1 Node)) Bool
  (or (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (not (= x!1 Node!val!1))
           (not (= x!1 Node!val!2)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Node!val!1)
           (not (= x!1 Node!val!2)))))
(define-fun init.locked ((x!0 Epoch) (x!1 Node)) Bool
  false)
(define-fun init.held ((x!0 Node)) Bool
  (= x!0 Node!val!2))
(define-fun init.transfer ((x!0 Epoch) (x!1 Node)) Bool
  false)
(define-fun pre.held ((x!0 Node)) Bool
  (= x!0 Node!val!2))
(define-fun pre.transfer ((x!0 Epoch) (x!1 Node)) Bool
  (or (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (not (= x!1 Node!val!1))
           (not (= x!1 Node!val!2)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Node!val!1)
           (not (= x!1 Node!val!2)))))
(define-fun le ((x!0 Epoch) (x!1 Epoch)) Bool
  (or (and (= x!0 Epoch!val!0)
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5)
           (= x!1 Epoch!val!6)
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!4)
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!4)
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!3)
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5)
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (not (= x!1 Epoch!val!0))
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!4)
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (not (= x!1 Epoch!val!0))
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!3)
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!4)
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5)
           (= x!1 Epoch!val!4)
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!4)
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!3)
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5)
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!1)
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!4)
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!0)
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!3)
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!6)
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5)
           (not (= x!1 Epoch!val!0))
           (not (= x!1 Epoch!val!6))
           (not (= x!1 Epoch!val!1))
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!5))
      (and (not (= x!0 Epoch!val!0))
           (not (= x!0 Epoch!val!6))
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!4)
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!5) (= x!1 Epoch!val!3) (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!1)
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!1)
           (not (= x!1 Epoch!val!4))
           (not (= x!1 Epoch!val!3))
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!3)
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!3)
           (not (= x!1 Epoch!val!5)))
      (and (= x!0 Epoch!val!6)
           (not (= x!0 Epoch!val!1))
           (not (= x!0 Epoch!val!4))
           (not (= x!0 Epoch!val!3))
           (not (= x!0 Epoch!val!5))
           (= x!1 Epoch!val!3)
           (not (= x!1 Epoch!val!5)))))
(define-fun init.ep ((x!0 Node)) Epoch
  (let ((a!1 (ite (and (= x!0 Node!val!1) (not (= x!0 Node!val!2)))
                  Epoch!val!5
                  Epoch!val!2)))
    (ite (and (not (= x!0 Node!val!1)) (not (= x!0 Node!val!2)))
         Epoch!val!5
         (ite (= x!0 Node!val!2) Epoch!val!6 a!1))))

(check-sat)
(get-model)